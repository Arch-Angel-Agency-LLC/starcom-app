# starcom-mk2-web3-login-ui-flows.artifact

### How to Use This Artifact
- Use this file to understand all UI/UX flows, state transitions, and edge cases for the login system.
- Reference this artifact before implementing or updating UI components or flows.

### Cross-References
- Related artifacts: `starcom-mk2-web3-login-design.artifact`, `starcom-mk2-web3-login-api.artifact`, `starcom-mk2-web3-login-implementation-plan.artifact`, `starcom-mk2-web3-login-test-plan.artifact`, `starcom-mk2-web3-login-known-issues.artifact`, `starcom-mk2-web3-login-changelog.artifact`

---

### Flows
- App loads → TermsModal (if not accepted) → User accepts → Wallet connect UI
- User clicks Connect → Wallet modal opens → User selects wallet
- Wallet connects → UI shows address/network → Option to disconnect
- Authentication/session is client-side (wallet signature, SIWE, localStorage) or on-chain (role checks, token gating). No backend session/token flows.
- See docs/Decentralized Web3 dApp Development Guide.markdown for full decentralized UI/UX patterns.
- Error states: no provider, wrong network, rejected connection, etc.
- Logout/disconnect → UI returns to connect state
- Added TokenGatedPage as a demo for on-chain role and token gating. Route: /token-gated. Shows access granted/denied based on useOnChainRoles and useTokenGate hooks.

---

### State Transitions
- idle → connecting → connected → error

---

### Edge Cases
- User rejects connection
- User on unsupported network
- Wallet disconnects unexpectedly
- Terms not accepted
- Session expires in localStorage (client-side)

---

### Accessibility
- All modals/buttons keyboard accessible
- Status and errors announced to screen readers

---

### Update Protocol
- Update this artifact for any UI/UX flow or state change.
- Reference the changelog artifact for all updates.

---

### On-Chain Role & Token Gating (Implemented)
- TokenGatedPage now demonstrates real on-chain role and token gating using useOnChainRoles and useTokenGate hooks.
- Route: /token-gated. UI shows access granted/denied based on contract ownership (ADMIN) and ERC-20 token balance.
- All access/denial scenarios are handled in the UI and tested (see test plan).
- See Decentralized Web3 dApp Development Guide for best practices.

---

### AI-NOTE
- On-chain role and token gating UI flows are now implemented and tested. If you add or change a UI flow, update this artifact and reference the changelog.
