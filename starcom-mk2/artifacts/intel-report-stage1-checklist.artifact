# Intelligence Exchange Market (IEM) â€” Stage 1 Task Checklist

## Solana & Anchor Setup
- [ ] Install Solana CLI (v1.18.18)
- [ ] Generate wallet keypair, set config to Devnet, fund with test SOL
- [ ] Install Rust
- [ ] Install Anchor CLI (~0.30.1)
- [ ] Initialize Anchor project in `contracts/intel-market/`
- [ ] Set Anchor.toml provider to devnet

## Token, NFT & Market Contracts
- [x] Remove all EVM/ethers.js and Metaplex/SPL-Token JS logic (archived, see artifacts)
- [x] Refactor hooks and components to secure placeholders (see artifacts)
- [ ] Add @solana/web3.js to Vite project (only secure Solana integration allowed)
- [ ] Create `src/services/tokenService.ts` for SPL token minting (secure placeholder in place)
- [ ] Create `src/services/nftService.ts` for NFT minting (secure placeholder in place)
- [ ] Define interfaces and overlays for market data, trading, and exchange logic (see overlays artifact)

## Overlays, API & Integration Artifacts
- [x] Create overlays artifact (`artifacts/intel-report-overlays.artifact`)
- [x] Create API integration artifact (`artifacts/intel-report-api-integration.artifact`)
- [x] Create integration plan artifact (`artifacts/intel-report-integration-plan.artifact`)

## Testing & Integration
- [ ] Add `scripts/testMint.ts` for minting tests
- [ ] Add npm script: `test:mint`
- [ ] Create `src/components/MintTest.tsx` for UI
- [ ] Use Material-UI for styling
- [ ] Update `src/App.tsx` to include MintTest
- [ ] Update Vite config for wallet support

## Documentation
- [ ] Add README to `contracts/intel-market/`
- [ ] Update main README with setup/test instructions

---
*Updated: 2025-06-14 (Zero High-Risk Vulnerabilities, artifact-driven progress)*
*Owner: AI Agent (Copilot)*
