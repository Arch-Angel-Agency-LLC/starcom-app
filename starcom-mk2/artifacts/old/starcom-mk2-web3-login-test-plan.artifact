# starcom-mk2-web3-login-test-plan.artifact

## Purpose
Testing strategy and checklist for the login system.

### How to Use This Artifact
- Use this file to guide all testing for the web3 login system.
- Reference this artifact before writing or updating tests.

### Cross-References
- Related artifacts: `starcom-mk2-web3-login-design.artifact`, `starcom-mk2-web3-login-api.artifact`, `starcom-mk2-web3-login-implementation-plan.artifact`, `starcom-mk2-web3-login-ui-flows.artifact`, `starcom-mk2-web3-login-known-issues.artifact`, `starcom-mk2-web3-login-changelog.artifact`

---

## Test Types
- Unit tests (hooks, utils, context, UI states) ✅
- Integration tests (context, UI flows) ⚠️ (see limitations)
- E2E tests (wallet connect/disconnect, protected routes)

---

## Test Cases
- Connect/disconnect wallet ✅
- Terms/consent gating ✅
- Network switching ✅
- Error handling (no provider, wrong network, user rejection, SIWE signature failure, session expiry) ✅
- Route protection ✅
- UI accessibility ✅
- SIWE/localStorage session: authenticate, persist, expire, re-authenticate ✅
- Tampered/invalid session in localStorage (should force logout) ✅

---

## Manual Scenarios
- Connect with MetaMask, WalletConnect
- Authenticate with SIWE (sign message)
- Session expires, user is prompted to re-authenticate
- Tamper with localStorage, verify forced logout
- Reject connection, switch network, disconnect

---

## Coverage Goals
- 90%+ for core logic (unit/context coverage achieved)
- 100% for SIWE/localStorage session logic

---

## Known Limitations
- Some wallet errors may be environment-specific
- Integration tests require full provider setup (QueryClientProvider, WagmiProvider, RainbowKitProvider) to work reliably. Unit tests for all login states are complete and passing.
- SIWE/localStorage session is only as secure as the client environment (XSS, localStorage tampering)

---

### AI-NOTE
- Update this artifact as you add or change tests.
- Add a `TODO:` for any missing or unclear test cases.

---

### Update Protocol
- Update this artifact for any test plan or coverage change.
- Reference the changelog artifact for all updates.

---

## TODO: Additional Test Cases Needed
- [x] SIWE/localStorage session expiry: Simulate session expiry and verify user is prompted to re-authenticate.
- [x] SIWE/localStorage invalid signature: Simulate invalid SIWE signature and verify error handling and forced logout.
- [x] localStorage tampering: Manually alter session data in localStorage and verify forced logout and error UI.
- [x] UX for session expiry: Ensure user is clearly prompted to re-authenticate when session expires or is invalid.
- [x] Accessibility: Add explicit tests for keyboard navigation and ARIA roles in login/session flows

---

## On-Chain Role & Token Gating Tests (Implemented)
- [x] TokenGatedPage integration tests cover all access/denial scenarios for on-chain roles and token gating (mocking hooks for ADMIN/USER and token balance cases)
- [x] All protected route and UI flows for token gating are tested and passing
- [x] No direct unit tests for hooks (useOnChainRoles/useTokenGate), but integration coverage is complete

---

### AI-NOTE
- On-chain role and token gating tests are now implemented and passing. See TokenGatedPage.test.tsx for details.
- If you add or change any test, update this artifact and reference the changelog.
