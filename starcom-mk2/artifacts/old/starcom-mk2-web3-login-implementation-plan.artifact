# starcom-mk2-web3-login-implementation-plan.artifact

### How to Use This Artifact
- Use this file to guide the step-by-step implementation of the web3 login system.
- Reference this artifact before starting new tasks or milestones.

### Cross-References
- Related artifacts: `starcom-mk2-web3-login-design.artifact`, `starcom-mk2-web3-login-api.artifact`, `starcom-mk2-web3-login-ui-flows.artifact`, `starcom-mk2-web3-login-test-plan.artifact`, `starcom-mk2-web3-login-known-issues.artifact`, `starcom-mk2-web3-login-changelog.artifact`

---

### Steps
1. Audit and document current login code (done)
2. Design unified login architecture (see design artifact)
3. Implement/complete TermsModal gating (done 2025-06-11)
4. Integrate wallet modal (RainbowKit/Web3Modal)
5. Refactor AuthContext and hooks for extensibility
6. Add route protection (ProtectedRoute)
7. Implement error boundaries and robust error handling
8. Add unit/integration/E2E tests (**unit/context tests for all login states complete and passing as of 2025-06-11; integration tests require provider setup**)
9. Refactor all code to remove backend auth/session logic and implement SIWE/localStorage/on-chain patterns per Decentralized Web3 dApp Development Guide.
10. Document all public APIs and flows
11. Update artifacts and onboarding docs

---

### Milestones
- M1: Terms/consent gating complete (2025-06-11)
- M2: Wallet modal and AuthContext refactor
- M3: Route protection and error handling
- M4: Testing and documentation (**unit/context test coverage for login complete 2025-06-11; integration test provider setup pending**)
- M5: Refactor for full decentralization (SIWE/localStorage/on-chain, no backend) (2025-06-11)

---

### Integration Points
- src/context, src/components/Auth, src/hooks, src/routes

---

### AI-NOTE
- Mark each completed step with a checkmark and update the changelog.
- Add a `TODO:` for any blockers or questions.
- TODO: Integration test provider setup (QueryClientProvider, WagmiProvider, RainbowKitProvider) required for full E2E coverage.

---

## TODO: On-Chain Role & Token Gating
- Scaffold useOnChainRoles and useTokenGate hooks
- Add UI and tests for protected/token-gated routes
- Reference Decentralized Web3 dApp Development Guide for patterns
- Scaffolded TokenGatedPage and integrated as a protected route for on-chain role/token gating demo. Next: add tests for access/denial flows.

---

### Update Protocol
- Update this artifact as you complete steps or change the plan.
- Reference the changelog artifact for all updates.
