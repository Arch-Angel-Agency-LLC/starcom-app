# Immediate Foundation Fixes (Week 1-2)

## 🚨 Critical Issues Identified

### 1. React Version Conflicts (HIGH PRIORITY)
**Problem**: Multiple React versions causing 522 dependency conflicts
- Main app: React 18.3.1
- @keystonehq/sdk: Requires React 16/17
- react-qr-reader: Requires React ~16

**Solution**: 
```bash
# Remove conflicting packages
npm uninstall @keystonehq/sdk
# Replace with Solana-native alternatives
npm install @solana/wallet-adapter-all
```

### 2. Bundle Size Optimization (HIGH PRIORITY)
**Current**: 2.9MB main chunk (851KB gzipped)
**Target**: <1MB gzipped

**Immediate Actions**:
1. **Code Splitting by Route**:
   ```typescript
   // Lazy load pages
   const MainPage = lazy(() => import('./pages/MainPage'));
   const IntelReportsPage = lazy(() => import('./pages/IntelReportsPage'));
   ```

2. **Dynamic Imports for Heavy Libraries**:
   ```typescript
   // Lazy load Three.js and globe components
   const Globe = lazy(() => import('./components/Globe/Globe'));
   ```

3. **Remove Unused Dependencies**:
   - `jest` (30MB) - Already using Vitest
   - `hardhat` (15MB) - Move to devDependencies
   - `ethers` (8MB) - Remove EVM legacy code
   - `wagmi` + `rainbowkit` (12MB) - Remove EVM wallet adapters

### 3. Build Memory Optimization (HIGH PRIORITY)
**Problem**: JavaScript heap out of memory during builds
**Solutions**:
1. **Vite Build Config Update**:
   ```typescript
   // vite.config.ts
   export default defineConfig({
     build: {
       minify: 'terser',
       terserOptions: {
         compress: {
           drop_console: true,
           drop_debugger: true,
         },
       },
       rollupOptions: {
         output: {
           manualChunks: {
             vendor: ['react', 'react-dom'],
             crypto: ['@solana/web3.js', 'buffer'],
             ui: ['@radix-ui/themes', 'styled-components'],
             visualization: ['three', 'react-globe.gl', 'd3'],
           },
         },
       },
     },
   });
   ```

2. **Memory Efficient Scripts**:
   ```json
   {
     "build": "NODE_OPTIONS='--max-old-space-size=8192' npm run build:app",
     "build:app": "tsc -b && vite build"
   }
   ```

### 4. EVM Legacy Cleanup (MEDIUM PRIORITY)
**Remove Unused EVM Dependencies**:
```bash
npm uninstall ethers wagmi @rainbow-me/rainbowkit viem
```

**Archive Legacy Files**:
- Move `legacy-evm/` to separate archive
- Remove EVM imports from active code

### 5. Workspace Structure (MEDIUM PRIORITY)
**Implement Progressive Migration**:
```
packages/
├── core/           # Business logic
├── ui/             # Shared components  
├── solana/         # Blockchain logic
└── globe-engine/   # 3D visualization
```

## 📋 Implementation Checklist

### Phase 1A: Immediate Fixes (Days 1-3)
- [ ] Remove conflicting React dependencies
- [ ] Add manual chunk splitting in Vite config
- [ ] Remove unused heavy dependencies (jest, hardhat)
- [ ] Implement lazy loading for main routes

### Phase 1B: Bundle Optimization (Days 4-7)
- [ ] Lazy load Three.js components
- [ ] Dynamic imports for WASM modules
- [ ] Tree shake unused exports
- [ ] Optimize polyfill loading

### Phase 1C: EVM Cleanup (Days 8-10)
- [ ] Remove EVM wallet adapters
- [ ] Archive legacy-evm code
- [ ] Clean up unused imports
- [ ] Update artifact references

### Phase 1D: Testing & Validation (Days 11-14)
- [ ] Build size verification (<1MB gzipped)
- [ ] Memory usage testing (<4GB)
- [ ] Performance benchmarking
- [ ] Feature regression testing

## 🎯 Success Metrics
- Build bundle: <1MB gzipped (currently 851KB)
- Build memory: <4GB (currently 8GB+)
- Build time: <20 seconds (currently ~17s)
- Dependencies: <300 (currently 522)
- Node modules: <1GB (currently 1.8GB)

## 🛡️ Risk Mitigation
- Feature flags for new architecture
- Incremental migration approach
- Comprehensive testing at each step
- Rollback plan for each change

---
*Priority: Critical*
*Timeline: 2 weeks*
*Owner: Foundation Team*
