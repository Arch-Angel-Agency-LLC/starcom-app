{
  "lint": {
    "success": false,
    "error": "Command failed: npx eslint src --format json -o cache/eslint-report.json"
  },
  "test": {
    "success": false,
    "error": "Command failed: npx vitest run --reporter=json --outputFile=cache/vitest-report.json"
  },
  "todos": [
    {
      "file": "src/components/AI/ThreatHorizonFeed.tsx",
      "line": 11,
      "text": "TODO: Restore full functionality with proper unified context types"
    },
    {
      "file": "src/components/Adaptive/EnhancedAdaptiveInterfaceProvider.tsx",
      "line": 5,
      "text": "TODO: This is currently a placeholder that wraps the standard AdaptiveInterfaceProvider"
    },
    {
      "file": "src/components/Auth/TokenGatedPage.test.tsx",
      "line": 8,
      "text": "TODO: Implement proper TokenGatedPage tests without RainbowKit/Wagmi circular deps"
    },
    {
      "file": "src/components/Auth/WalletStatusMini.tsx",
      "line": 771,
      "text": "TODO: Implement actual network validation"
    },
    {
      "file": "src/components/Collaboration/CollaborativeAnnotations.tsx",
      "line": 206,
      "text": "TODO: Replace with actual operator from collaboration state"
    },
    {
      "file": "src/components/Collaboration/CollaborativeAnnotations.tsx",
      "line": 232,
      "text": "TODO: Implement full collaboration features"
    },
    {
      "file": "src/components/Collaboration/CollaborativeAnnotations.tsx",
      "line": 357,
      "text": "TODO: Implement addAnnotation function"
    },
    {
      "file": "src/components/Collaboration/CollaborativeAnnotations.tsx",
      "line": 364,
      "text": "TODO: Implement annotation reply functionality"
    },
    {
      "file": "src/components/Collaboration/SessionManager.tsx",
      "line": 69,
      "text": "TODO: Implement full session management"
    },
    {
      "file": "src/components/Globe/Globe.tsx",
      "line": 88,
      "text": "TODO: Use overlay/event data from GlobeEngine if needed"
    },
    {
      "file": "src/components/Globe/Globe.tsx",
      "line": 220,
      "text": "TODO: Add user setting for fast loading"
    },
    {
      "file": "src/components/HUD/Bars/TopBar/useTopBarData.ts",
      "line": 20,
      "text": "TODO: Replace with real API calls"
    },
    {
      "file": "src/components/HUD/Bars/TopBar/useTopBarPreferences.ts",
      "line": 27,
      "text": "TODO: handle migration/versioning"
    },
    {
      "file": "src/components/HUD/Center/Globe3DView.tsx",
      "line": 25,
      "text": "TODO: Update globe with context-specific data"
    },
    {
      "file": "src/components/HUD/Center/Globe3DView.tsx",
      "line": 33,
      "text": "TODO: Initialize actual 3D globe (Three.js, D3-geo, or WebGL)"
    },
    {
      "file": "src/components/HUD/Center/Globe3DView.tsx",
      "line": 71,
      "text": "TODO: Cleanup 3D resources, event listeners, etc."
    },
    {
      "file": "src/components/HUD/Center/Globe3DView.tsx",
      "line": 97,
      "text": "TODO: Convert screen coordinates to globe coordinates"
    },
    {
      "file": "src/components/HUD/Center/Globe3DView.tsx",
      "line": 100,
      "text": "TODO: implement in context)"
    },
    {
      "file": "src/components/HUD/Center/Globe3DView.tsx",
      "line": 105,
      "text": "TODO: Implement globe view changes"
    },
    {
      "file": "src/components/HUD/Center/NodeGraphView.tsx",
      "line": 232,
      "text": "TODO: Implement node selection and context actions"
    },
    {
      "file": "src/components/Intel/IntelReportList.tsx",
      "line": 4,
      "text": "TODO: Integrate with Solana/secure backend and overlays when live."
    },
    {
      "file": "src/components/Intel/overlays/IntelOverlay.tsx",
      "line": 4,
      "text": "TODO: Integrate with live Solana/secure backend overlays when available."
    },
    {
      "file": "src/components/SpaceWeather/SpaceWeatherStatus.tsx",
      "line": 6,
      "text": "TODO: Integrate with existing HUD system and globe overlays"
    },
    {
      "file": "src/components/TinyGlobe/TinyGlobe.test.tsx",
      "line": 46,
      "text": "TODO: Add more tests to check globe material changes and fallback behavior"
    },
    {
      "file": "src/context/AuthContext.ts",
      "line": 35,
      "text": "TODO: Solana wallet context in progress. See artifacts/intel-report-stage1-plan.artifact"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 290,
      "text": "TODO: Replace mock with live fetch from API/backend/Solana"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 457,
      "text": "TODO: Replace mock data with live Solana/secure backend integration."
    },
    {
      "file": "src/hooks/useEnhancedAdaptiveUtilities.ts",
      "line": 5,
      "text": "TODO: Implement full adaptive utilities in future phase"
    },
    {
      "file": "src/hooks/useEnhancedAdaptiveUtilities.ts",
      "line": 17,
      "text": "TODO: Implement proper adaptive analysis"
    },
    {
      "file": "src/hooks/useSIWEAuth.ts",
      "line": 6,
      "text": "TODO: Implement Solana-compatible authentication if needed. See artifacts/intel-report-artifact-index.artifact."
    },
    {
      "file": "src/hooks/useSpaceWeatherData.ts",
      "line": 7,
      "text": "TODO: Integrate with existing globe overlays and intelligence context"
    },
    {
      "file": "src/pages/IntelReportsPage.tsx",
      "line": 4,
      "text": "TODO: Integrate with Solana/secure backend and live overlays when available."
    },
    {
      "file": "src/services/IntelReportService.ts",
      "line": 57,
      "text": "TODO: Re-enable when Anchor integration is ready"
    },
    {
      "file": "src/services/IntelReportService.ts",
      "line": 118,
      "text": "TODO: Use actual wallet keypair"
    },
    {
      "file": "src/services/IntelReportService.ts",
      "line": 148,
      "text": "TODO: Replace with real Solana transaction logic"
    },
    {
      "file": "src/services/IntelReportService.ts",
      "line": 210,
      "text": "TODO: Implement actual account fetching once program is deployed"
    },
    {
      "file": "src/services/IntelReportService.ts",
      "line": 217,
      "text": "TODO: Implement actual account fetching once program is deployed"
    },
    {
      "file": "src/services/NOAAGeomagneticService.test.ts",
      "line": 8,
      "text": "TODO: Implement NOAAGeomagneticService tests"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 59,
      "text": "TODO: Integrate with liboqs or similar PQC library"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 69,
      "text": "TODO: Implement ML-KEM encapsulation"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 77,
      "text": "TODO: Implement ML-KEM decapsulation"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 86,
      "text": "TODO: Integrate with liboqs ML-DSA implementation"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 95,
      "text": "TODO: Implement ML-DSA signing"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 109,
      "text": "TODO: Implement ML-DSA verification"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 237,
      "text": "TODO: Implement ECDH with Solana keys"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 242,
      "text": "TODO: Implement ECDH secret derivation"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 248,
      "text": "TODO: Implement proper HKDF"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 257,
      "text": "TODO: Implement AES-256-GCM encryption"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 262,
      "text": "TODO: Implement AES-256-GCM decryption"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 267,
      "text": "TODO: Implement multi-recipient encryption"
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 281,
      "text": "TODO: Store algorithm update on Solana for audit trail"
    },
    {
      "file": "src/services/data-management/StarcomDataManager.ts",
      "line": 526,
      "text": "TODO: Implement cache entry age tracking in cache services"
    },
    {
      "file": "src/services/data-management/providers/IntelDataProvider.ts",
      "line": 155,
      "text": "TODO: Implement actual account fetching once program is deployed"
    },
    {
      "file": "src/services/data-services.all.test.ts",
      "line": 18,
      "text": "TODO: Add imports for all future domain/provider/cache/adapters tests"
    },
    {
      "file": "src/services/eia/EIADataCacheService.observability.test.ts",
      "line": 23,
      "text": "TODO: Add tests for observer hooks on TTL expiry"
    },
    {
      "file": "src/services/eia/EIADataCacheService.observability.test.ts",
      "line": 24,
      "text": "TODO: Assert logs/metrics/traces are emitted as expected (see observability artifact)"
    },
    {
      "file": "src/services/eia/EIADataCacheService.observability.test.ts",
      "line": 25,
      "text": "TODO: Test health check endpoint/method"
    },
    {
      "file": "src/services/eia/EIADataProvider.observability.test.ts",
      "line": 20,
      "text": "TODO: Add tests for observer hooks on fetch error"
    },
    {
      "file": "src/services/eia/EIADataProvider.observability.test.ts",
      "line": 21,
      "text": "TODO: Assert logs/metrics/traces are emitted as expected (see observability artifact)"
    },
    {
      "file": "src/services/eia/EIADataProvider.observability.test.ts",
      "line": 22,
      "text": "TODO: Test health check endpoint/method"
    },
    {
      "file": "src/services/eia/EIAService.e2e.test.ts",
      "line": 4,
      "text": "TODO: Simulate real consumer usage of EIAService (static and instance APIs)"
    },
    {
      "file": "src/services/eia/EIAService.e2e.test.ts",
      "line": 5,
      "text": "TODO: Test migration scenarios, feature flags, and rollback"
    },
    {
      "file": "src/services/eia/EIAService.e2e.test.ts",
      "line": 6,
      "text": "TODO: Test integration with adapters and legacy consumers"
    },
    {
      "file": "src/services/market/MarketDataCacheService.unit.test.ts",
      "line": 3,
      "text": "TODO: Implement MarketDataCacheService and its tests as for EIADataCacheService"
    },
    {
      "file": "src/services/market/MarketDataCacheService.unit.test.ts",
      "line": 4,
      "text": "TODO: Add tests for TTL, eviction, observer hooks, edge cases"
    },
    {
      "file": "src/services/market/MarketDataProvider.unit.test.ts",
      "line": 3,
      "text": "TODO: Implement MarketDataProvider and its tests as for EIADataProvider"
    },
    {
      "file": "src/services/market/MarketDataProvider.unit.test.ts",
      "line": 4,
      "text": "TODO: Add tests for error handling, streaming/subscription, observer hooks, edge cases"
    },
    {
      "file": "src/services/nftService.ts",
      "line": 3,
      "text": "TODO: Implement NFT minting via backend or CLI for zero high-risk vulnerabilities."
    },
    {
      "file": "src/services/nftService.ts",
      "line": 9,
      "text": "TODO: Implement mintIntelReportNFT() using secure Solana logic only."
    },
    {
      "file": "src/services/shared/FallbackProvider.unit.test.ts",
      "line": 23,
      "text": "TODO: Add tests for observer hooks (see observability artifact)"
    },
    {
      "file": "src/services/shared/FallbackProvider.unit.test.ts",
      "line": 24,
      "text": "TODO: Add tests for streaming/subscription support (see interfaces artifact)"
    },
    {
      "file": "src/services/tokenService.ts",
      "line": 3,
      "text": "TODO: Implement token minting via backend or CLI for zero high-risk vulnerabilities."
    },
    {
      "file": "src/services/tokenService.ts",
      "line": 8,
      "text": "TODO: Implement mintIntelToken() using secure Solana logic only."
    },
    {
      "file": "src/testing/ai-agent/AgentInterface.ts",
      "line": 143,
      "text": "TODO: Implement accessibility tester"
    },
    {
      "file": "src/testing/ai-agent/AgentInterface.ts",
      "line": 149,
      "text": "TODO: Implement visual regression testing"
    },
    {
      "file": "src/utils/wallet.ts",
      "line": 1,
      "text": "TODO: Solana wallet integration in progress. See artifacts/intel-report-stage1-plan.artifact"
    }
  ],
  "aiNotes": [
    {
      "file": "src/api/intelligence.ts",
      "line": 1,
      "text": "AI-NOTE: Intelligence API integration for Solana-based Intelligence Exchange Marketplace"
    },
    {
      "file": "src/api/market.mock.ts",
      "line": 14,
      "text": "AI-NOTE: This file is for local development only. All live market data should be fetched from on-chain or decentralized sources in production, per the serverless, on-chain policy in the updated artifacts."
    },
    {
      "file": "src/components/AI/AIActionsPanel.tsx",
      "line": 51,
      "text": "AI-NOTE: These depth levels are planned for future progressive disclosure features"
    },
    {
      "file": "src/components/Auth/AuthErrorBoundary.tsx",
      "line": 3,
      "text": "AI-NOTE: Error boundary for authentication and wallet errors (see artifacts)"
    },
    {
      "file": "src/components/Auth/AuthGate.tsx",
      "line": 7,
      "text": "AI-NOTE: Enhanced AuthGate component with comprehensive feature gating"
    },
    {
      "file": "src/components/Auth/TermsModal.test.tsx",
      "line": 2,
      "text": "AI-NOTE: This feature was removed, adding placeholder test"
    },
    {
      "file": "src/components/Auth/TokenGatedPage.test.minimal.tsx",
      "line": 2,
      "text": "AI-NOTE: Minimal test to avoid stack overflow from RainbowKit/Wagmi"
    },
    {
      "file": "src/components/Auth/TokenGatedPage.test.tsx",
      "line": 2,
      "text": "AI-NOTE: Simplified version to prevent stack overflow caused by RainbowKit/Wagmi circular dependencies"
    },
    {
      "file": "src/components/Auth/TokenGatedPage.tsx",
      "line": 41,
      "text": "AI-NOTE: This component is EVM/ethers.js-based and not compatible with the serverless, on-chain Solana architecture. Refactor or remove this file. All token/NFT gating should use Solana primitives and wallet-based access control, enforced on-chain and in the client per the updated artifacts."
    },
    {
      "file": "src/components/Auth/WalletStatus.test.tsx",
      "line": 2,
      "text": "AI-NOTE: Tests split into category files, adding placeholder"
    },
    {
      "file": "src/components/Auth/WalletStatusMini.tsx",
      "line": 9,
      "text": "AI-NOTE: Starcom command center wallet status for TopBar"
    },
    {
      "file": "src/components/Collaboration/IntelligenceMarketplace.tsx",
      "line": 13,
      "text": "AI-NOTE: Temporary mock hook until proper marketplace context is implemented"
    },
    {
      "file": "src/components/Collaboration/IntelligenceMarketplace.tsx",
      "line": 169,
      "text": "AI-NOTE: Suppress unused parameter warning until implementation"
    },
    {
      "file": "src/components/Collaboration/SessionManager.tsx",
      "line": 16,
      "text": "AI-NOTE: Mock hooks until proper implementations are available"
    },
    {
      "file": "src/components/Collaboration/SessionManager.tsx",
      "line": 20,
      "text": "AI-NOTE: Suppress unused parameter warning until implementation"
    },
    {
      "file": "src/components/Collaboration/SessionManager.tsx",
      "line": 25,
      "text": "AI-NOTE: Suppress unused parameter warning until implementation"
    },
    {
      "file": "src/components/Collaboration/SessionManager.tsx",
      "line": 60,
      "text": "AI-NOTE: Mock collaboration features until proper implementation"
    },
    {
      "file": "src/components/Debug/WalletDiagnostic.tsx",
      "line": 5,
      "text": "AI-NOTE: Enhanced movable diagnostic component for wallet debugging"
    },
    {
      "file": "src/components/Demo/AuthDemoPage.tsx",
      "line": 11,
      "text": "AI-NOTE: This page demonstrates the new AuthGate component, SIWS auth, and feature gating"
    },
    {
      "file": "src/components/EcoNatural/SpaceWeatherNormalizationPanel.tsx",
      "line": 2,
      "text": "AI-NOTE: Advanced normalization control panel for space weather visualization"
    },
    {
      "file": "src/components/Globe/Globe.tsx",
      "line": 120,
      "text": "AI-NOTE: Fix for stack overflow caused by recursive resize event dispatch"
    },
    {
      "file": "src/components/Globe/Globe.tsx",
      "line": 269,
      "text": "AI-NOTE: Refactored to use GlobeEngine. See globe-engine-api.artifact for integration details."
    },
    {
      "file": "src/components/HUD/Bars/LeftSideBar/GlobeControls.tsx",
      "line": 4,
      "text": "AI-NOTE: Globe Controls component moved from RightSideBar to LeftSideBar"
    },
    {
      "file": "src/components/HUD/Bars/LeftSideBar/ModeSettingsPanel.tsx",
      "line": 8,
      "text": "AI-NOTE: Dynamic settings panel that displays different controls based on visualization mode"
    },
    {
      "file": "src/components/HUD/Bars/RightSideBar/GlobeStatus.tsx",
      "line": 7,
      "text": "AI-NOTE: Globe Status component moved from LeftSideBar (TinyGlobe/ModeSettingsPanel) to RightSideBar"
    },
    {
      "file": "src/components/HUD/Bars/TopBar/EnhancedSettingsPopup.tsx",
      "line": 149,
      "text": "AI-NOTE: Enhanced modal integrates TopBar categories with unified space weather settings."
    },
    {
      "file": "src/components/HUD/Bars/TopBar/Marquee.tsx",
      "line": 113,
      "text": "AI-NOTE: Marquee is accessible, pauses on hover/focus, loops, and is responsive."
    },
    {
      "file": "src/components/HUD/Bars/TopBar/SettingsPopup.tsx",
      "line": 5,
      "text": "AI-NOTE: The artifact 'topbar-component-api.artifact' does not exist. Using local type for SettingsPopupProps."
    },
    {
      "file": "src/components/HUD/Bars/TopBar/SettingsPopup.tsx",
      "line": 96,
      "text": "AI-NOTE: Modal is accessible, focus-trapped, ESC/outside-click dismiss, and scrollable for long lists."
    },
    {
      "file": "src/components/HUD/Bars/TopBar/TopBar.test.tsx",
      "line": 114,
      "text": "AI-NOTE: Tests accessibility, toggling, and integration per artifact requirements."
    },
    {
      "file": "src/components/HUD/Bars/TopBar/useTopBarPreferences.ts",
      "line": 56,
      "text": "AI-NOTE: Handles loading, saving, and updating user preferences for TopBar categories."
    },
    {
      "file": "src/components/HUD/Corners/BottomLeft/BottomLeft.module.css",
      "line": 13,
      "text": "AI-NOTE: Minimal styling for empty container - ready for future content */"
    },
    {
      "file": "src/components/HUD/Corners/BottomLeft/BottomLeft.tsx",
      "line": 4,
      "text": "AI-NOTE: BottomLeft corner cleared during authentication refactor"
    },
    {
      "file": "src/components/HUD/Popups/NOAAPopup.tsx",
      "line": 6,
      "text": "AI-NOTE: Enhanced NOAA popup with progressive disclosure and improved UX"
    },
    {
      "file": "src/components/HUD/Settings/SpaceWeatherSettings/ElectricFieldToggleTest.tsx",
      "line": 2,
      "text": "AI-NOTE: Simple test component to validate electric field toggle functionality"
    },
    {
      "file": "src/components/HUD/Settings/SpaceWeatherSettings/SpaceWeatherSettings.tsx",
      "line": 8,
      "text": "AI-NOTE: EcoNatural visualization settings panel for all natural/environmental data"
    },
    {
      "file": "src/components/Intel/IntelReportList.tsx",
      "line": 1,
      "text": "AI-NOTE: Artifact-driven UI stub for intelligence report list."
    },
    {
      "file": "src/components/Intel/overlays/IntelOverlay.tsx",
      "line": 1,
      "text": "AI-NOTE: Artifact-driven UI stub for intelligence overlays (SIGINT/HUMINT)."
    },
    {
      "file": "src/components/SettingsInitializer.tsx",
      "line": 8,
      "text": "AI-NOTE: Component to ensure all persistent settings are properly initialized and reflected in the UI"
    },
    {
      "file": "src/components/SettingsStatusIndicator.tsx",
      "line": 5,
      "text": "AI-NOTE: Component to show users the status of their persistent settings"
    },
    {
      "file": "src/components/SpaceWeather/SpaceWeatherStatus.tsx",
      "line": 5,
      "text": "AI-NOTE: Demo component for NOAA space weather integration - shows electric field data and alerts"
    },
    {
      "file": "src/components/TinyGlobe/TinyGlobe.tsx",
      "line": 43,
      "text": "AI-NOTE: Integration with GlobeEngine per globe-engine-api.artifact"
    },
    {
      "file": "src/components/TinyGlobe/TinyGlobe.tsx",
      "line": 257,
      "text": "AI-NOTE: Refactored to use GlobeEngine. See globe-engine-api.artifact for integration details."
    },
    {
      "file": "src/context/AuthContext.ts",
      "line": 36,
      "text": "AI-NOTE: EVM/ethers.js version archived in legacy-evm/AuthContext.ts. Implement Solana logic here."
    },
    {
      "file": "src/context/AuthContext.tsx",
      "line": 234,
      "text": "AI-NOTE: EVM/ethers.js version archived in legacy-evm/AuthContext.tsx. Implement Solana logic here."
    },
    {
      "file": "src/context/SpaceWeatherContext.test.tsx",
      "line": 3,
      "text": "AI-NOTE: Integration tests for SpaceWeatherContext toggle functionality"
    },
    {
      "file": "src/context/SpaceWeatherContext.tsx",
      "line": 2,
      "text": "AI-NOTE: Context for sharing space weather data and settings across components"
    },
    {
      "file": "src/globe-engine/GlobeEngine.spaceWeather.test.ts",
      "line": 2,
      "text": "AI-NOTE: Tests the complete data flow from NOAA API to Globe visualization"
    },
    {
      "file": "src/globe-engine/GlobeEngine.spaceWeather.test.ts",
      "line": 247,
      "text": "AI-NOTE: This test suite verifies the complete integration of NOAA space weather data"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 2,
      "text": "AI-NOTE: See globe-engine-architecture.artifact and globe-engine-api.artifact for design and API rationale."
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 66,
      "text": "AI-NOTE: See globe-mode-mapping-reference.artifact, globe-modes.artifact, globe-shaders.artifact, globe-textures.artifact"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 145,
      "text": "AI-NOTE: Space weather periodic update methods"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 226,
      "text": "AI-NOTE: See globe-overlays.artifact for overlay logic and data sources."
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 289,
      "text": "AI-NOTE: Fetch intel markers from secure API (see overlays artifact)"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 321,
      "text": "AI-NOTE: Fetch NOAA space weather data (electric field InterMag & US-Canada)"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 326,
      "text": "AI-NOTE: Space weather overlays integration (see NOAA-TDD-Implementation-Summary.md)"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 412,
      "text": "AI-NOTE: Overlay data structure and update mechanism should be defined in globe-overlays.artifact"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 420,
      "text": "AI-NOTE: Overlay data update mechanism should be defined in globe-overlays.artifact"
    },
    {
      "file": "src/globe-engine/GlobeEngine.ts",
      "line": 452,
      "text": "AI-NOTE: Overlays for intelligence markers (SIGINT/HUMINT) are currently mocked."
    },
    {
      "file": "src/globe-engine/GlobeMaterialManager.ts",
      "line": 2,
      "text": "AI-NOTE: See globe-shaders.artifact for shader/material documentation."
    },
    {
      "file": "src/globe-engine/GlobeMaterialManager.ts",
      "line": 16,
      "text": "AI-NOTE: See globe-shaders.artifact for shader/material documentation."
    },
    {
      "file": "src/globe-engine/GlobeModeMapping.ts",
      "line": 2,
      "text": "AI-NOTE: See globe-mode-mapping-reference.artifact for mapping logic."
    },
    {
      "file": "src/globe-engine/GlobeModeMapping.ts",
      "line": 14,
      "text": "AI-NOTE: See globe-mode-mapping-reference.artifact and globe-modes.artifact for mapping logic."
    },
    {
      "file": "src/globe-engine/GlobeTextureLoader.ts",
      "line": 2,
      "text": "AI-NOTE: See globe-textures.artifact for asset manifest and usage mapping."
    },
    {
      "file": "src/globe-engine/GlobeTextureLoader.ts",
      "line": 11,
      "text": "AI-NOTE: See globe-textures.artifact for asset manifest and usage mapping."
    },
    {
      "file": "src/hooks/useCyberCommandSettings.ts",
      "line": 4,
      "text": "AI-NOTE: Hook to manage CyberCommand visualization settings with localStorage persistence"
    },
    {
      "file": "src/hooks/useEcoNaturalSettings.ts",
      "line": 4,
      "text": "AI-NOTE: Hook to manage EcoNatural visualization settings with localStorage persistence"
    },
    {
      "file": "src/hooks/useGeoPoliticalSettings.ts",
      "line": 4,
      "text": "AI-NOTE: Hook to manage GeoPolitical visualization settings with localStorage persistence"
    },
    {
      "file": "src/hooks/useOverlayData.ts",
      "line": 3,
      "text": "AI-NOTE: Shared hook for overlay data used by both Globe Controls and Globe Status"
    },
    {
      "file": "src/hooks/useSIWEAuth.ts",
      "line": 4,
      "text": "AI-NOTE: Archived EVM/ethers.js SIWE (Sign-In With Ethereum) logic. "
    },
    {
      "file": "src/hooks/useSpaceWeatherData.ts",
      "line": 6,
      "text": "AI-NOTE: Updated to use proper caching service for better performance and data persistence"
    },
    {
      "file": "src/hooks/useSpaceWeatherSettings.ts",
      "line": 4,
      "text": "AI-NOTE: Hook to manage space weather visualization settings with localStorage persistence"
    },
    {
      "file": "src/hooks/useStorageMonitoring.ts",
      "line": 2,
      "text": "AI-NOTE: React hook to monitor and manage browser storage usage"
    },
    {
      "file": "src/interfaces/IntelReportOverlay.ts",
      "line": 1,
      "text": "AI-NOTE: Artifact-driven interface for Intel Report overlays and market data."
    },
    {
      "file": "src/pages/IntelReportsPage.tsx",
      "line": 1,
      "text": "AI-NOTE: Artifact-driven route/page for intelligence reports and overlays."
    },
    {
      "file": "src/pages/MainPage/MainPage.tsx",
      "line": 5,
      "text": "AI-NOTE: Globe now renders inside HUD center via CenterViewManager"
    },
    {
      "file": "src/routes/ProtectedRoute.tsx",
      "line": 5,
      "text": "AI-NOTE: Protects routes by requiring authentication (see artifacts)"
    },
    {
      "file": "src/services/EIAService.ts",
      "line": 53,
      "text": "AI-NOTE: This class now uses artifact-driven provider/cache abstractions. Legacy static API is preserved for now. Migrate consumers to instance-based API in future steps."
    },
    {
      "file": "src/services/NOAAGeomagneticService.test.ts",
      "line": 2,
      "text": "AI-NOTE: This service test file was empty, adding placeholder"
    },
    {
      "file": "src/services/SpaceWeatherCacheService.ts",
      "line": 2,
      "text": "AI-NOTE: Following the same pattern as EIADataCacheService for consistency"
    },
    {
      "file": "src/services/SpaceWeatherCacheService.ts",
      "line": 109,
      "text": "AI-NOTE: This implements proper caching for space weather data following the established pattern."
    },
    {
      "file": "src/services/crypto/PQCryptoService.ts",
      "line": 4,
      "text": "AI-NOTE: This service provides quantum-resistant security for intelligence assets"
    },
    {
      "file": "src/services/data-management/StarcomDataManager.ts",
      "line": 2,
      "text": "AI-NOTE: Core implementation of the unified data management system"
    },
    {
      "file": "src/services/data-management/StarcomDataManager.ts",
      "line": 566,
      "text": "AI-NOTE: This implementation provides a robust foundation for centralized data management"
    },
    {
      "file": "src/services/data-management/interfaces.ts",
      "line": 2,
      "text": "AI-NOTE: Upgraded from existing data-service-interfaces.ts to support comprehensive data management"
    },
    {
      "file": "src/services/data-management/interfaces.ts",
      "line": 379,
      "text": "AI-NOTE: This enhanced interface system provides the foundation for a comprehensive data management system"
    },
    {
      "file": "src/services/data-management/providerRegistry.ts",
      "line": 2,
      "text": "AI-NOTE: Single entry point to register all data providers with StarcomDataManager"
    },
    {
      "file": "src/services/data-service-interfaces.ts",
      "line": 48,
      "text": "AI-NOTE: This file is artifact-driven and should be updated if the interfaces artifact changes."
    },
    {
      "file": "src/services/eia/EIADataCacheService.ts",
      "line": 76,
      "text": "AI-NOTE: This is a minimal, artifact-driven implementation. Add persistence or advanced invalidation as needed."
    },
    {
      "file": "src/services/eia/EIADataProvider.ts",
      "line": 53,
      "text": "AI-NOTE: This is a minimal, artifact-driven implementation. Replace mock logic with real API integration."
    },
    {
      "file": "src/services/eia/LegacyEIAServiceAdapter.ts",
      "line": 34,
      "text": "AI-NOTE: This adapter preserves the legacy API shape but delegates to the new artifact-driven service."
    },
    {
      "file": "src/services/nftService.ts",
      "line": 4,
      "text": "AI-NOTE: SPL-Token JS and Metaplex are not allowed due to security policy."
    },
    {
      "file": "src/services/nftService.ts",
      "line": 6,
      "text": "AI-NOTE: Secure placeholder for Intel Report NFT minting service."
    },
    {
      "file": "src/services/nftService.ts",
      "line": 11,
      "text": "AI-NOTE: All NFT minting logic must be implemented client-side using @solana/web3.js and wallet signatures only. No backend or CLI is allowed per the serverless, on-chain policy in the updated artifacts."
    },
    {
      "file": "src/services/noaaSpaceWeather.integration.test.ts",
      "line": 2,
      "text": "AI-NOTE: Using global fetch instead of undici for browser compatibility"
    },
    {
      "file": "src/services/noaaSpaceWeather.test.ts",
      "line": 2,
      "text": "AI-NOTE: Using vitest's built-in fetch mock instead of undici for browser compatibility"
    },
    {
      "file": "src/services/noaaSpaceWeather.test.ts",
      "line": 13,
      "text": "AI-NOTE: Starting with integration test to understand actual NOAA API behavior"
    },
    {
      "file": "src/services/noaaSpaceWeather.ts",
      "line": 2,
      "text": "AI-NOTE: Building up functionality test by test"
    },
    {
      "file": "src/services/noaaSpaceWeather.ts",
      "line": 7,
      "text": "AI-NOTE: Use appropriate fetch implementation for each environment"
    },
    {
      "file": "src/services/testNoaaFunctions.mjs",
      "line": 4,
      "text": "AI-NOTE: This bypasses the complex test suite to verify basic functionality"
    },
    {
      "file": "src/services/tokenService.ts",
      "line": 4,
      "text": "AI-NOTE: SPL-Token JS and Metaplex are not allowed due to security policy."
    },
    {
      "file": "src/services/tokenService.ts",
      "line": 5,
      "text": "AI-NOTE: Secure placeholder for SPL token minting service."
    },
    {
      "file": "src/services/tokenService.ts",
      "line": 9,
      "text": "AI-NOTE: All minting logic must be implemented client-side using @solana/web3.js and wallet signatures only. No backend or CLI is allowed per the serverless, on-chain policy in the updated artifacts."
    },
    {
      "file": "src/testing/playwright/global-teardown.ts",
      "line": 50,
      "text": "AI-NOTE: Stats collection placeholder for future enhancement"
    },
    {
      "file": "src/types/data/spaceWeather.ts",
      "line": 2,
      "text": "AI-NOTE: Based on analysis of NOAA SWPC electric field datasets"
    },
    {
      "file": "src/utils/browserStorageManager.ts",
      "line": 2,
      "text": "AI-NOTE: Prevents excessive browser storage accumulation that could bloat system cache"
    },
    {
      "file": "src/utils/electricFieldNormalization.test.ts",
      "line": 2,
      "text": "AI-NOTE: Tests for the advanced electric field normalization utilities"
    },
    {
      "file": "src/utils/electricFieldNormalization.ts",
      "line": 2,
      "text": "AI-NOTE: Advanced normalization utilities for electric field data visualization"
    },
    {
      "file": "src/utils/settingsStorage.ts",
      "line": 1,
      "text": "AI-NOTE: Centralized settings persistence utility for all visualization mode settings"
    },
    {
      "file": "src/utils/uiSettingsReflection.ts",
      "line": 1,
      "text": "AI-NOTE: Utility functions to ensure UI state reflects persistent settings"
    },
    {
      "file": "src/utils/wallet.ts",
      "line": 2,
      "text": "AI-NOTE: EVM/ethers.js version archived in legacy-evm/wallet.ts. Implement Solana logic here."
    }
  ],
  "generatedAt": "2025-06-24T00:11:38.968Z"
}