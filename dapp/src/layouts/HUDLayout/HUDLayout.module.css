.hudLayout {
  height: 100vh;
  width: 100vw; /* Ensure full width of the viewport */
  position: relative;
  pointer-events: none; /* Allow clicks to pass through */
}

/* Special styling for embedded mode */
.embeddedMode {
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

.hudLayout > div {
  pointer-events: none; /* Allow clicks to pass through */
}

.topLeftCorner, .topRightCorner,
.bottomLeftCorner, .bottomRightCorner {
  position: absolute;
  z-index: 10; /* Corners take priority for z-space */
  background: rgba(0, 0, 0, 0); /* transparent background */
  pointer-events: auto; /* Enable clicks on HUD components */
  width: 20%;
  height: 20%;
}

/* Adjust corner positions for embedded mode */
.embeddedMode .topLeftCorner {
  top: 0;
  left: 0;
  width: 15%;
  height: 15%;
}

.embeddedMode .topRightCorner {
  top: 5%;
  right: 5%;
  width: 80px;
  height: 80px;
}

.embeddedMode .bottomLeftCorner {
  bottom: 2%;
  left: 3%;
}

.embeddedMode .bottomRightCorner {
  bottom: 2%;
  right: 5%;
}

.topLeftCorner {
  top: 0;
  left: 0;
}

.topRightCorner {
  top: 10%;
  right: 8%; /* Matches the RightSideBar width */
  width: 120px;
  height: 120px;
}

.bottomLeftCorner {
  bottom: 3%;
  left: 6%; /* Ensure it aligns with the left side */
  pointer-events: auto; /* Enable clicks on HUD components */
}

.bottomRightCorner {
  bottom: 3%;
  right: 8%;
  background: transparent;
}

.topBar, .bottomBar {
  position: absolute;
  background: rgba(0, 0, 0, 0.0); /* transparent background */
  pointer-events: auto; /* Enable clicks on HUD components */
}

.topBar {
  z-index: 3;
  top: 0;
  width: 100%;
  height: 5%;
  pointer-events: auto; /* Enable clicks on HUD components */
}

.bottomBar {
  bottom: 0;
  left: 110px; /* Respect LeftSideBar width */
  right: 0;
  width: calc(100% - 110px); /* Adjust width to account for LeftSideBar */
  height: 5%; /* Adjust height as needed */
  z-index: 10; /* Lower than LeftSideBar to respect dominance */
  pointer-events: auto; /* Enable clicks on HUD components */
}

/* Adjust bars for embedded mode */
.embeddedMode .bottomBar {
  left: 80px; /* Smaller left sidebar in embedded mode */
  width: calc(100% - 80px);
  height: 4%;
  bottom: 0;
  position: absolute;
  z-index: 1002; /* Ensure it's above other elements but below MainBottomBar */
}

.leftSideBar, .rightSideBar {
  position: absolute;
  background: rgba(0, 0, 0, 0.0); /* transparent background */
  pointer-events: auto; /* Enable clicks on HUD components */
}

.leftSideBar {
  position: absolute;
  z-index: 1001; /* Match the LeftSideBar component z-index */
  top: 0;
  left: 0;
  width: 110px; /* Match the actual LeftSideBar width */
  bottom: 0; /* Stretch all the way to bottom - no BottomBar interference */
}

.rightSideBar {
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0;
  width: auto; /* Let the sidebar component control its own width */
  z-index: 1000; /* Higher z-index for proper layering */
  pointer-events: auto;
}

/* Adjust sidebars for embedded mode */
.embeddedMode .leftSideBar {
  width: 80px;
}

.embeddedMode .rightSideBar {
  width: auto;
}

.center {
  position: absolute;
  top: 5%; /* Below TopBar */
  left: 110px; /* Right of LeftSideBar (110px wide) */
  right: 120px; /* Left of RightSideBar (120px wide) */
  bottom: 5%; /* Above BottomBar */
  overflow: hidden;
  pointer-events: auto;
  z-index: 1; /* Base layer */
}

/* Adjust center area for embedded mode */
.embeddedMode .center {
  top: 2%;
  left: 80px;
  right: 80px;
  bottom: 40px; /* Match the fixed height of the embedded NewBottomBar */
  position: absolute;
}

.embeddedCenter {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  bottom: 40px !important; /* Leave room just for the NewBottomBar */
  width: 100% !important;
  height: calc(100% - 40px) !important;
}

.overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 10, 30, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 9999;
  backdrop-filter: blur(5px);
  pointer-events: auto;
}

/* Styles for embedded bottom bar */
.embeddedBottomBar {
  position: absolute;
  bottom: 0;
  height: 40px !important;
  background: rgba(0, 20, 40, 0.7) !important;
  border-top: 1px solid rgba(64, 200, 255, 0.2) !important;
}

/* Responsive adjustments for smaller screens */
@media (max-width: 1200px) {
  .center {
    left: 110px; /* Maintain LeftSideBar width */
    right: 100px; /* Smaller right margin on smaller screens */
  }
}

@media (max-width: 768px) {
  .leftSideBar {
    width: 80px; /* Smaller LeftSideBar on mobile */
  }
  
  .bottomBar {
    left: 80px; /* Match mobile LeftSideBar width */
    width: calc(100% - 80px); /* Adjust for mobile LeftSideBar */
  }
  
  .center {
    top: 8%; /* More space for mobile top bar */
    left: 80px; /* Match mobile LeftSideBar width */
    right: 60px;
    bottom: 8%; /* More space for mobile bottom bar */
  }
}